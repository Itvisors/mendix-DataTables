// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package datatablestestmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the DataTablesTestModule module
	public static void aCT_Country_ConnectToPersonData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.ACT_Country_ConnectToPersonData").withParams(params).execute(context);
	}
	public static void aCT_Country_SetLanguage(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.ACT_Country_SetLanguage").withParams(params).execute(context);
	}
	public static void aCT_DataTableContextEntity_ForceRefresh(IContext context, datatablestestmodule.proxies.DataTableContextEntity _dataTableContextEntity)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DataTableContextEntity", _dataTableContextEntity == null ? null : _dataTableContextEntity.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_DataTableContextEntity_ForceRefresh").withParams(params).execute(context);
	}
	public static void aCT_DataTableContextEntity_ForceRefreshKeepPosition(IContext context, datatablestestmodule.proxies.DataTableContextEntity _dataTableContextEntity)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DataTableContextEntity", _dataTableContextEntity == null ? null : _dataTableContextEntity.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_DataTableContextEntity_ForceRefreshKeepPosition").withParams(params).execute(context);
	}
	public static void aCT_DataTableContextEntity_RefreshInClient(IContext context, datatablestestmodule.proxies.DataTableContextEntity _dataTableContextEntity)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DataTableContextEntity", _dataTableContextEntity == null ? null : _dataTableContextEntity.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_DataTableContextEntity_RefreshInClient").withParams(params).execute(context);
	}
	public static void aCT_ImportData(IContext context, datatablestestmodule.proxies.ImportData _importData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ImportData", _importData == null ? null : _importData.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_ImportData").withParams(params).execute(context);
	}
	public static void aCT_Person_LogSelection(IContext context, java.util.List<datatablestestmodule.proxies.Person> _personList, datatablestestmodule.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_personList = null;
		if (_personList != null)
		{
			listparam_personList = new java.util.ArrayList<>();
			for (datatablestestmodule.proxies.Person obj : _personList)
				listparam_personList.add(obj.getMendixObject());
		}
		params.put("PersonList", listparam_personList);

		params.put("Person", _person == null ? null : _person.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_Person_LogSelection").withParams(params).execute(context);
	}
	public static void aCT_Person_LogSelectionWithObjectRefresh(IContext context, java.util.List<datatablestestmodule.proxies.Person> _personList, datatablestestmodule.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_personList = null;
		if (_personList != null)
		{
			listparam_personList = new java.util.ArrayList<>();
			for (datatablestestmodule.proxies.Person obj : _personList)
				listparam_personList.add(obj.getMendixObject());
		}
		params.put("PersonList", listparam_personList);

		params.put("Person", _person == null ? null : _person.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_Person_LogSelectionWithObjectRefresh").withParams(params).execute(context);
	}
	public static void aCT_TestCalcAttr_Create(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.ACT_TestCalcAttr_Create").withParams(params).execute(context);
	}
	public static void aCT_TestCalcAttr_Delete(IContext context, datatablestestmodule.proxies.TestCalcAttr _testCalcAttr)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestCalcAttr", _testCalcAttr == null ? null : _testCalcAttr.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestCalcAttr_Delete").withParams(params).execute(context);
	}
	public static void aCT_TestCalcAttr_Edit(IContext context, datatablestestmodule.proxies.TestCalcAttr _testCalcAttr)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestCalcAttr", _testCalcAttr == null ? null : _testCalcAttr.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestCalcAttr_Edit").withParams(params).execute(context);
	}
	public static void aCT_TestCalcAttr_Save(IContext context, datatablestestmodule.proxies.TestCalcAttr _testCalcAttr)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestCalcAttr", _testCalcAttr == null ? null : _testCalcAttr.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestCalcAttr_Save").withParams(params).execute(context);
	}
	public static void aCT_TestDataTypes_Create(IContext context, datatablestestmodule.proxies.DataTableContextEntity _dataTableContextEntity)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DataTableContextEntity", _dataTableContextEntity == null ? null : _dataTableContextEntity.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestDataTypes_Create").withParams(params).execute(context);
	}
	public static void aCT_TestDataTypes_Delete(IContext context, datatablestestmodule.proxies.TestDataTypes _testDataTypes)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestDataTypes", _testDataTypes == null ? null : _testDataTypes.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestDataTypes_Delete").withParams(params).execute(context);
	}
	public static void aCT_TestDataTypes_Edit_InContent(IContext context, datatablestestmodule.proxies.TestDataTypes _testDataTypes)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestDataTypes", _testDataTypes == null ? null : _testDataTypes.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestDataTypes_Edit_InContent").withParams(params).execute(context);
	}
	public static void aCT_TestDataTypes_Edit_Popup(IContext context, datatablestestmodule.proxies.TestDataTypes _testDataTypes)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestDataTypes", _testDataTypes == null ? null : _testDataTypes.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestDataTypes_Edit_Popup").withParams(params).execute(context);
	}
	public static void aCT_TestDataTypes_Edit_Popup_LongRunning(IContext context, datatablestestmodule.proxies.TestDataTypes _testDataTypes)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestDataTypes", _testDataTypes == null ? null : _testDataTypes.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestDataTypes_Edit_Popup_LongRunning").withParams(params).execute(context);
	}
	public static void aCT_TestDataTypes_Save(IContext context, datatablestestmodule.proxies.TestDataTypes _testDataTypes)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestDataTypes", _testDataTypes == null ? null : _testDataTypes.getMendixObject());
		Core.microflowCall("DataTablesTestModule.ACT_TestDataTypes_Save").withParams(params).execute(context);
	}
	public static boolean aSU_AfterStartup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("DataTablesTestModule.ASU_AfterStartup").withParams(params).execute(context);
	}
	public static datatablestestmodule.proxies.Color cAL_TestCalcAttr_CalcAttr(IContext context, datatablestestmodule.proxies.TestCalcAttr _testCalcAttr)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TestCalcAttr", _testCalcAttr == null ? null : _testCalcAttr.getMendixObject());
		java.lang.String result = (java.lang.String) Core.microflowCall("DataTablesTestModule.CAL_TestCalcAttr_CalcAttr").withParams(params).execute(context);
		return result == null ? null : datatablestestmodule.proxies.Color.valueOf(result);
	}
	public static datatablestestmodule.proxies.DataTableContextEntity dS_DataGridContextEntity(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("DataTablesTestModule.DS_DataGridContextEntity").withParams(params).execute(context);
		return result == null ? null : datatablestestmodule.proxies.DataTableContextEntity.initialize(context, result);
	}
	public static datatablestestmodule.proxies.ImportData dS_ImportData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("DataTablesTestModule.DS_ImportData").withParams(params).execute(context);
		return result == null ? null : datatablestestmodule.proxies.ImportData.initialize(context, result);
	}
	public static void nT_ShowDemoMasterDetail1(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.NT_ShowDemoMasterDetail1").withParams(params).execute(context);
	}
	public static void nT_ShowDemoMasterDetail2(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.NT_ShowDemoMasterDetail2").withParams(params).execute(context);
	}
	public static void nT_ShowDemoSearchFilters1(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.NT_ShowDemoSearchFilters1").withParams(params).execute(context);
	}
	public static void nT_ShowDemoSearchFilters2(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.NT_ShowDemoSearchFilters2").withParams(params).execute(context);
	}
	public static void nT_ShowDemoXPathInput(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.NT_ShowDemoXPathInput").withParams(params).execute(context);
	}
	public static void nT_ShowHomePage(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.NT_ShowHomePage").withParams(params).execute(context);
	}
	public static void oCh_DataTableContextEntity_DateTimeValue(IContext context, datatablestestmodule.proxies.DataTableContextEntity _dataTableContextEntity)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DataTableContextEntity", _dataTableContextEntity == null ? null : _dataTableContextEntity.getMendixObject());
		Core.microflowCall("DataTablesTestModule.OCh_DataTableContextEntity_DateTimeValue").withParams(params).execute(context);
	}
	public static void oCh_Person_ShowSelectedPerson(IContext context, datatablestestmodule.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		Core.microflowCall("DataTablesTestModule.OCh_Person_ShowSelectedPerson").withParams(params).execute(context);
	}
	public static void oCh_Person_ShowSelectedPerson_NoEmptySelection(IContext context, datatablestestmodule.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		Core.microflowCall("DataTablesTestModule.OCh_Person_ShowSelectedPerson_NoEmptySelection").withParams(params).execute(context);
	}
	public static java.math.BigDecimal parseSalary(IContext context, java.lang.String _salaryString)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SalaryString", _salaryString);
		return (java.math.BigDecimal) Core.microflowCall("DataTablesTestModule.ParseSalary").withParams(params).execute(context);
	}
	public static datatablestestmodule.proxies.DataTableContextEntity sUB_DataTableContextEntity_GetFromSession(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("DataTablesTestModule.SUB_DataTableContextEntity_GetFromSession").withParams(params).execute(context);
		return result == null ? null : datatablestestmodule.proxies.DataTableContextEntity.initialize(context, result);
	}
	public static void sUB_UserSessionObject_Create(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DataTablesTestModule.SUB_UserSessionObject_Create").withParams(params).execute(context);
	}
}