// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package datatablestestmodule.proxies;

public class TestCalcAttr
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject testCalcAttrMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DataTablesTestModule.TestCalcAttr";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CalcAttr("CalcAttr"),
		Count("Count"),
		Item("Item");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TestCalcAttr(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DataTablesTestModule.TestCalcAttr"));
	}

	protected TestCalcAttr(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject testCalcAttrMendixObject)
	{
		if (testCalcAttrMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DataTablesTestModule.TestCalcAttr", testCalcAttrMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DataTablesTestModule.TestCalcAttr");

		this.testCalcAttrMendixObject = testCalcAttrMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TestCalcAttr.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static datatablestestmodule.proxies.TestCalcAttr initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return datatablestestmodule.proxies.TestCalcAttr.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static datatablestestmodule.proxies.TestCalcAttr initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new datatablestestmodule.proxies.TestCalcAttr(context, mendixObject);
	}

	public static datatablestestmodule.proxies.TestCalcAttr load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return datatablestestmodule.proxies.TestCalcAttr.initialize(context, mendixObject);
	}

	public static java.util.List<datatablestestmodule.proxies.TestCalcAttr> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<datatablestestmodule.proxies.TestCalcAttr> result = new java.util.ArrayList<datatablestestmodule.proxies.TestCalcAttr>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DataTablesTestModule.TestCalcAttr" + xpathConstraint))
			result.add(datatablestestmodule.proxies.TestCalcAttr.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of CalcAttr
	 * @param calcattr
	 */
	public final datatablestestmodule.proxies.Color getCalcAttr()
	{
		return getCalcAttr(getContext());
	}

	/**
	 * @param context
	 * @return value of CalcAttr
	 */
	public final datatablestestmodule.proxies.Color getCalcAttr(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.CalcAttr.toString());
		if (obj == null)
			return null;

		return datatablestestmodule.proxies.Color.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of CalcAttr
	 * @param calcattr
	 */
	public final void setCalcAttr(datatablestestmodule.proxies.Color calcattr)
	{
		setCalcAttr(getContext(), calcattr);
	}

	/**
	 * Set value of CalcAttr
	 * @param context
	 * @param calcattr
	 */
	public final void setCalcAttr(com.mendix.systemwideinterfaces.core.IContext context, datatablestestmodule.proxies.Color calcattr)
	{
		if (calcattr != null)
			getMendixObject().setValue(context, MemberNames.CalcAttr.toString(), calcattr.toString());
		else
			getMendixObject().setValue(context, MemberNames.CalcAttr.toString(), null);
	}

	/**
	 * @return value of Count
	 */
	public final java.lang.Integer getCount()
	{
		return getCount(getContext());
	}

	/**
	 * @param context
	 * @return value of Count
	 */
	public final java.lang.Integer getCount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Count.toString());
	}

	/**
	 * Set value of Count
	 * @param count
	 */
	public final void setCount(java.lang.Integer count)
	{
		setCount(getContext(), count);
	}

	/**
	 * Set value of Count
	 * @param context
	 * @param count
	 */
	public final void setCount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer count)
	{
		getMendixObject().setValue(context, MemberNames.Count.toString(), count);
	}

	/**
	 * @return value of Item
	 */
	public final java.lang.String getItem()
	{
		return getItem(getContext());
	}

	/**
	 * @param context
	 * @return value of Item
	 */
	public final java.lang.String getItem(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Item.toString());
	}

	/**
	 * Set value of Item
	 * @param item
	 */
	public final void setItem(java.lang.String item)
	{
		setItem(getContext(), item);
	}

	/**
	 * Set value of Item
	 * @param context
	 * @param item
	 */
	public final void setItem(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String item)
	{
		getMendixObject().setValue(context, MemberNames.Item.toString(), item);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return testCalcAttrMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final datatablestestmodule.proxies.TestCalcAttr that = (datatablestestmodule.proxies.TestCalcAttr) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DataTablesTestModule.TestCalcAttr";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
