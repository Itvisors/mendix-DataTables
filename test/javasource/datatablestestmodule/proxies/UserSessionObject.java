// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package datatablestestmodule.proxies;

public class UserSessionObject
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject userSessionObjectMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DataTablesTestModule.UserSessionObject";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UserSessionObject_DataTableContextEntity("DataTablesTestModule.UserSessionObject_DataTableContextEntity"),
		UserSessionObject_Session("DataTablesTestModule.UserSessionObject_Session");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public UserSessionObject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DataTablesTestModule.UserSessionObject"));
	}

	protected UserSessionObject(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject userSessionObjectMendixObject)
	{
		if (userSessionObjectMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DataTablesTestModule.UserSessionObject", userSessionObjectMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DataTablesTestModule.UserSessionObject");

		this.userSessionObjectMendixObject = userSessionObjectMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'UserSessionObject.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static datatablestestmodule.proxies.UserSessionObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return datatablestestmodule.proxies.UserSessionObject.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static datatablestestmodule.proxies.UserSessionObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new datatablestestmodule.proxies.UserSessionObject(context, mendixObject);
	}

	public static datatablestestmodule.proxies.UserSessionObject load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return datatablestestmodule.proxies.UserSessionObject.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of UserSessionObject_DataTableContextEntity
	 */
	public final datatablestestmodule.proxies.DataTableContextEntity getUserSessionObject_DataTableContextEntity() throws com.mendix.core.CoreException
	{
		return getUserSessionObject_DataTableContextEntity(getContext());
	}

	/**
	 * @param context
	 * @return value of UserSessionObject_DataTableContextEntity
	 */
	public final datatablestestmodule.proxies.DataTableContextEntity getUserSessionObject_DataTableContextEntity(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		datatablestestmodule.proxies.DataTableContextEntity result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UserSessionObject_DataTableContextEntity.toString());
		if (identifier != null)
			result = datatablestestmodule.proxies.DataTableContextEntity.load(context, identifier);
		return result;
	}

	/**
	 * Set value of UserSessionObject_DataTableContextEntity
	 * @param usersessionobject_datatablecontextentity
	 */
	public final void setUserSessionObject_DataTableContextEntity(datatablestestmodule.proxies.DataTableContextEntity usersessionobject_datatablecontextentity)
	{
		setUserSessionObject_DataTableContextEntity(getContext(), usersessionobject_datatablecontextentity);
	}

	/**
	 * Set value of UserSessionObject_DataTableContextEntity
	 * @param context
	 * @param usersessionobject_datatablecontextentity
	 */
	public final void setUserSessionObject_DataTableContextEntity(com.mendix.systemwideinterfaces.core.IContext context, datatablestestmodule.proxies.DataTableContextEntity usersessionobject_datatablecontextentity)
	{
		if (usersessionobject_datatablecontextentity == null)
			getMendixObject().setValue(context, MemberNames.UserSessionObject_DataTableContextEntity.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.UserSessionObject_DataTableContextEntity.toString(), usersessionobject_datatablecontextentity.getMendixObject().getId());
	}

	/**
	 * @return value of UserSessionObject_Session
	 */
	public final system.proxies.Session getUserSessionObject_Session() throws com.mendix.core.CoreException
	{
		return getUserSessionObject_Session(getContext());
	}

	/**
	 * @param context
	 * @return value of UserSessionObject_Session
	 */
	public final system.proxies.Session getUserSessionObject_Session(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Session result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UserSessionObject_Session.toString());
		if (identifier != null)
			result = system.proxies.Session.load(context, identifier);
		return result;
	}

	/**
	 * Set value of UserSessionObject_Session
	 * @param usersessionobject_session
	 */
	public final void setUserSessionObject_Session(system.proxies.Session usersessionobject_session)
	{
		setUserSessionObject_Session(getContext(), usersessionobject_session);
	}

	/**
	 * Set value of UserSessionObject_Session
	 * @param context
	 * @param usersessionobject_session
	 */
	public final void setUserSessionObject_Session(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Session usersessionobject_session)
	{
		if (usersessionobject_session == null)
			getMendixObject().setValue(context, MemberNames.UserSessionObject_Session.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.UserSessionObject_Session.toString(), usersessionobject_session.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return userSessionObjectMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final datatablestestmodule.proxies.UserSessionObject that = (datatablestestmodule.proxies.UserSessionObject) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DataTablesTestModule.UserSessionObject";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
